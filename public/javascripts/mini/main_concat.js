// Generated by CoffeeScript 1.8.0
var addTestListener, html;

html = "<div class='row'>\n  <div class='col-xs-3'>\n    <input type='text' value='50%'>\n  </div>\n  <div class='col-xs-9'>\n    <a class='btn btn-default btn-100'>\n      Next test\n    </a>\n  </div>\n<div>";

addTestListener = function() {
  return $('.btn-add-test').on('click', function(event) {
    var $add_row;
    event.preventDefault();
    $add_row = $('.add_test');
    return $add_row.before(html);
  });
};

$(document).ready(function() {
  return addTestListener();
});


// Generated by CoffeeScript 1.8.0
var saveButtonListener;

saveButtonListener = function() {
  return $('#save-action').on('click', function(event) {
    event.preventDefault();
    $('nav').append('<div class="alert alert-success" role="alert">Saved!</div>');
    return $('.alert-success').delay(800).fadeOut(600);
  });
};

$(document).ready(function() {
  return saveButtonListener();
});


// Generated by CoffeeScript 1.8.0
var DETAILS_FORM, EVENTS, TIME_FORM, closeModalListener, dayListener, detailsCTAListener, finaliseBookingListener, hideHour, hideMinute, hourPopoverListener, minutePopoverListener, popoverListener, responsiveCal, timeInputListener, timeListbuilder, timeListener, toggleModal;

TIME_FORM = '#time-form';

DETAILS_FORM = '#details-form';

EVENTS = {
  '2014-10-31': {
    'number': 5
  },
  '2014-10-20': {
    'number': 3
  },
  '2014-10-15': {
    'number': 9
  }
};

responsiveCal = function() {
  return $('.responsive-calendar').responsiveCalendar({
    time: '2014-10',
    events: EVENTS
  });
};

dayListener = function() {
  return $('.day').on('click', function(event) {
    var $target, day, month, year;
    event.preventDefault();
    $target = $(event.target);
    day = $target.data('day');
    month = $target.data('month');
    year = $target.data('year');
    $('#full-date').text("" + day + "-" + month + "-" + year);
    return toggleModal(TIME_FORM);
  });
};

closeModalListener = function() {
  return $(".close-modal").on("click", function(event) {
    var target;
    event.preventDefault();
    target = $(event.target);
    return toggleModal(TIME_FORM);
  });
};

timeListener = function() {
  $('.hour').on('click', function(event) {
    event.preventDefault();
    return hideMinute();
  });
  return $('.minute').on('click', function(event) {
    event.preventDefault();
    return hideHour();
  });
};

hideMinute = function() {
  return $('.minute').popover('hide');
};

hideHour = function() {
  return $('.hour').popover('hide');
};

timeListbuilder = function(times) {
  var listArray;
  listArray = _.collect(times, function(time) {
    return "<li class='time-input' data-value='" + time + "'><a class='time-link' href='#'>" + time + " <span class='badge'>2</a></a></li>";
  });
  return listArray.join('');
};

popoverListener = function(times, type) {
  return $("." + type).popover({
    'title': "Select booking " + type,
    'html': 'true',
    'placement': 'bottom',
    'content': "<ul> " + (timeListbuilder(times)) + " </ul>"
  });
};

minutePopoverListener = function() {
  var minutes;
  minutes = _.range(0, 60, 15);
  popoverListener(minutes, 'minute');
  return timeInputListener();
};

hourPopoverListener = function() {
  var hours;
  hours = _.range(9, 18);
  popoverListener(hours, 'hour');
  return timeInputListener();
};

timeInputListener = function() {
  return $('.time-link').on('click', function(event) {
    var $target;
    alert('click!');
    event.preventDefault();
    return $target = $(event.target);
  });
};

detailsCTAListener = function() {
  return $('.details').on('click', function(event) {
    var $target;
    event.preventDefault();
    $target = $(event.target);
    return toggleModal(DETAILS_FORM);
  });
};

finaliseBookingListener = function() {
  return $('.finalise-booking').on('click', function(event) {
    var $target;
    event.preventDefault();
    $target = $(event.target);
    return $("#finalise-booking").toggleClass('hidden');
  });
};

toggleModal = function(id) {
  return $(id).toggleClass('hidden');
};

$(document).ready(function() {
  responsiveCal();
  window.setTimeout(dayListener, 1000);
  closeModalListener();
  hourPopoverListener();
  minutePopoverListener();
  timeListener();
  detailsCTAListener();
  return finaliseBookingListener();
});


// Generated by CoffeeScript 1.8.0
var dashboardListener;

dashboardListener = function() {
  return $('.metric').on('click', function(event) {
    var $target, url;
    $target = $(event.target);
    url = $target.data('url');
    return window.location.href = url;
  });
};

$(document).ready(function() {
  return dashboardListener();
});


// Generated by CoffeeScript 1.8.0
var changeModelValue, changeVariantValue, drawVariant, drawVariants, financeCalcCloseListener, financeCalcInterestInputListener, financeCalcListener, financeCalcMobileInputListener, financeCalcUserInputListener, financeCalcYearsInputListener, getControl, minMaxNumber, numberWithCommas, suburbSearchInputSubmitListener, suburbSearchListener, toggleForm, updateEstimate, variantInputListener;

toggleForm = function(target) {
  var form, klass, type;
  type = target.data("type");
  klass = target.attr("class");
  if (type === "variant" && klass === "finance-calculator") {
    drawVariants(target);
  } else {
    "";
  }
  form = "#" + type + "-input";
  return $(form).toggleClass("hidden");
};

getControl = function(type) {
  return $("a.finance-calculator[data-type=\"" + type + "\"]");
};

changeModelValue = function(target) {
  var control, value;
  value = target.data("value");
  control = getControl("model");
  return control.text(value);
};

changeVariantValue = function(target) {
  var control, variants;
  variants = target.data("variants");
  control = getControl("variant");
  control.text((variants instanceof Array ? variants[0] : variants));
  return control.attr("data-value", variants);
};

drawVariant = function(variant) {
  var $ul;
  $ul = $("#variant-input ul");
  return $ul.append("<li class=\"list-group-item finance-calculator-variant-input\" data-type=\"vaiant\" data-value=\"" + variant + "\">" + variant + "</li>");
};

drawVariants = function(target) {
  var $ul, variants;
  variants = target.data("value");
  variants = variants.split(",");
  $ul = $("#variant-input ul");
  $ul.find("li").remove();
  _.each(variants, drawVariant);
  return variantInputListener();
};

variantInputListener = function() {
  return $(".finance-calculator-variant-input").on("click", function(event) {
    var control, target, variant;
    event.preventDefault();
    updateEstimate();
    target = $($(event.target)[0]);
    variant = target.data("value");
    control = getControl("variant");
    control.text(variant);
    return $("#variant-input").toggleClass("hidden");
  });
};

minMaxNumber = function(min, max) {
  return numberWithCommas(Math.floor(Math.random() * max) + min);
};

numberWithCommas = function(number) {
  return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
};

updateEstimate = function() {
  var total, week;
  week = minMaxNumber(400, 1500);
  total = minMaxNumber(40000, 150000);
  $("#estimate-week").text("$" + week);
  $("#estimate-week-old").text("");
  $("#estimate-total").text("$" + total);
  return $("#estimate-total-old").text("");
};

financeCalcListener = function() {
  return $(".finance-calculator").on("click", function(event) {
    var target;
    event.preventDefault();
    target = $(event.target);
    return toggleForm(target);
  });
};

financeCalcMobileInputListener = function() {
  return $(".finance-calculator-model-input").on("click", function(event) {
    var target;
    event.preventDefault();
    target = $(event.target);
    changeModelValue(target);
    changeVariantValue(target);
    updateEstimate();
    return toggleForm(target);
  });
};

financeCalcCloseListener = function() {
  return $(".finance-calculator-close").on("click", function(event) {
    var target;
    event.preventDefault();
    target = $(event.target);
    return toggleForm(target);
  });
};

suburbSearchListener = function() {
  return $("#suburb-search").on("focus", function(event) {
    var data, value;
    data = [];
    value = 1000;
    _.times(7000, function(n) {
      value++;
      return data.push(value.toString());
    });
    return $("#suburb-search").typeahead({
      source: data,
      items: 15
    });
  });
};

suburbSearchInputSubmitListener = function() {
  return $("#suburb-input-submit").on("click", function(event) {
    var control, suburb, target;
    event.preventDefault();
    target = $(event.target);
    suburb = $("#suburb-search").val();
    control = getControl("suburb");
    control.text(suburb);
    updateEstimate();
    return toggleForm(target);
  });
};

financeCalcUserInputListener = function() {
  return $(".finance-calculator-use-input").on("click", function(event) {
    var control, target, use;
    event.preventDefault();
    target = $(event.target);
    use = target.data("value");
    control = getControl("use");
    control.text(use);
    updateEstimate();
    return toggleForm(target);
  });
};

financeCalcInterestInputListener = function() {
  return $(".finance-calculator-interest-input").on("click", function(event) {
    var control, interest, target;
    event.preventDefault();
    target = $(event.target);
    interest = target.data("value");
    control = getControl("interest");
    control.text(interest);
    updateEstimate();
    return toggleForm(target);
  });
};

financeCalcYearsInputListener = function() {
  return $(".finance-calculator-years-input").on("click", function(event) {
    var control, target, years;
    event.preventDefault();
    target = $(event.target);
    years = target.data("value");
    control = getControl("years");
    control.text(years);
    updateEstimate();
    return toggleForm(target);
  });
};

$(document).ready(function() {
  financeCalcListener();
  financeCalcMobileInputListener();
  financeCalcCloseListener();
  suburbSearchListener();
  suburbSearchInputSubmitListener();
  financeCalcUserInputListener();
  financeCalcInterestInputListener();
  return financeCalcYearsInputListener();
});


// Generated by CoffeeScript 1.8.0
var formListener, initCheckbox, initTypeAhead, interestListener, substringMatcher;

formListener = function() {
  return $('input').on('focus', function(event) {
    var $target;
    $target = $(event.target);
    $target.parent().addClass('has-error');
    return window.onkeyup = function(event) {
      $target.parent().removeClass('has-error');
      return $target.parent().addClass('has-success');
    };
  });
};

substringMatcher = function(strs) {
  var findMatches;
  return findMatches = function(q, cb) {
    var matches, substrRegex;
    matches = [];
    substrRegex = new RegExp(q, "i");
    $.each(strs, function(i, str) {
      if (substrRegex.test(str)) {
        matches.push({
          value: str
        });
      }
    });
    cb(matches);
  };
};

initTypeAhead = function() {
  var staff;
  staff = ['Joshua Wood', 'Evangelia Kirpichnikov', 'Samuel Teh', 'Andrew Mara', 'Josh Boyden', 'Kevin Goult', 'Nathan Johnson', 'Rolee Satyam', 'Merran Morton', 'Mike Hill', 'Justine Marino', 'Kevin Trinh', 'Trent Ellis'];
  return $('.staff-search').typeahead({
    hint: true,
    highlight: true,
    minLength: 1
  }, {
    name: 'staff',
    displayKey: 'value',
    source: substringMatcher(staff)
  });
};

initCheckbox = function() {
  return $('.checkbox-notifications').checkbox();
};

interestListener = function() {
  return $('.interest-item').on('click', function(event) {
    var $target;
    $target = $(event.target);
    return $target.toggleClass('active');
  });
};

$(document).ready(function() {
  formListener();
  initTypeAhead();
  initCheckbox();
  return interestListener();
});


// Generated by CoffeeScript 1.8.0
var questionFormListener;

questionFormListener = function() {
  return $('submit#service-question').on('click', function(event) {
    var $form, $target, message;
    event.preventDefault();
    $target = $(event.target);
    $form = $target.parent();
    message = $form.find('textarea').val();
    $form.toggleClass('hidden');
    $('#question-form-thanks').toggleClass('hidden');
    $('#show-question').toggleClass('hidden');
    return $('#show-question').text(message);
  });
};

$(document).ready(function() {
  return questionFormListener();
});


// Generated by CoffeeScript 1.8.0
var searchInputListener, searchListener;

searchListener = function() {
  return $('.nav-search').on('click', function(event) {
    event.preventDefault();
    $('.nav-search-form').toggleClass('hidden');
    return $('.nav-standard').toggleClass('hidden');
  });
};

searchInputListener = function() {
  return $('#nav-search-input').on('focus', function() {
    return $('.nav-search-results').removeClass('hidden');
  });
};

$(document).ready(function() {
  searchListener();
  return searchInputListener();
});


// Generated by CoffeeScript 1.8.0
tinymce.initOptions = function() {
  return tinymce.init({
    selector: 'textarea',
    menubar: false,
    plugins: ['link image table hr'],
    toolbar1: 'bold italic underline | alignleft aligncenter alignright',
    toolbar2: 'bullist numlist | link unlink anchor image media',
    toolbar3: 'table | hr | blockquote | undo redo'
  });
};

$(document).ready(function() {
  if ($('#richText')) {
    return tinymce.initOptions();
  }
});


// Generated by CoffeeScript 1.8.0
var tripListListener;

tripListListener = function() {
  return $('.trip-item').on('click', function(event) {
    return window.location.replace('/trips/redfern-to-north-sydney');
  });
};

$(document).ready(function() {
  return tripListListener();
});


