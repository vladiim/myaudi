// Generated by CoffeeScript 1.8.0
var changeModelValue, changeVariantValue, drawVariant, drawVariants, financeCalcCloseListener, financeCalcInterestInputListener, financeCalcListener, financeCalcMobileInputListener, financeCalcUserInputListener, financeCalcYearsInputListener, getControl, minMaxNumber, numberWithCommas, suburbSearchInputSubmitListener, suburbSearchListener, toggleForm, updateEstimate, variantInputListener;

toggleForm = function(target) {
  var form, klass, type;
  type = target.data("type");
  klass = target.attr("class");
  if (type === "variant" && klass === "finance-calculator") {
    drawVariants(target);
  } else {
    "";
  }
  form = "#" + type + "-input";
  return $(form).toggleClass("hidden");
};

getControl = function(type) {
  return $("a.finance-calculator[data-type=\"" + type + "\"]");
};

changeModelValue = function(target) {
  var control, value;
  value = target.data("value");
  control = getControl("model");
  return control.text(value);
};

changeVariantValue = function(target) {
  var control, variants;
  variants = target.data("variants");
  control = getControl("variant");
  control.text((variants instanceof Array ? variants[0] : variants));
  return control.attr("data-value", variants);
};

drawVariant = function(variant) {
  var $ul;
  $ul = $("#variant-input ul");
  return $ul.append("<li class=\"list-group-item finance-calculator-variant-input\" data-type=\"vaiant\" data-value=\"" + variant + "\">" + variant + "</li>");
};

drawVariants = function(target) {
  var $ul, variants;
  variants = target.data("value");
  variants = variants.split(",");
  $ul = $("#variant-input ul");
  $ul.find("li").remove();
  _.each(variants, drawVariant);
  return variantInputListener();
};

variantInputListener = function() {
  return $(".finance-calculator-variant-input").on("click", function(event) {
    var control, target, variant;
    event.preventDefault();
    updateEstimate();
    target = $($(event.target)[0]);
    variant = target.data("value");
    control = getControl("variant");
    control.text(variant);
    return $("#variant-input").toggleClass("hidden");
  });
};

minMaxNumber = function(min, max) {
  return numberWithCommas(Math.floor(Math.random() * max) + min);
};

numberWithCommas = function(number) {
  return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
};

updateEstimate = function() {
  var total, week;
  week = minMaxNumber(400, 1500);
  total = minMaxNumber(40000, 150000);
  $("#estimate-week").text("$" + week);
  $("#estimate-week-old").text("");
  $("#estimate-total").text("$" + total);
  return $("#estimate-total-old").text("");
};

financeCalcListener = function() {
  return $(".finance-calculator").on("click", function(event) {
    var target;
    event.preventDefault();
    target = $(event.target);
    return toggleForm(target);
  });
};

financeCalcMobileInputListener = function() {
  return $(".finance-calculator-model-input").on("click", function(event) {
    var target;
    event.preventDefault();
    target = $(event.target);
    changeModelValue(target);
    changeVariantValue(target);
    updateEstimate();
    return toggleForm(target);
  });
};

financeCalcCloseListener = function() {
  return $(".finance-calculator-close").on("click", function(event) {
    var target;
    event.preventDefault();
    target = $(event.target);
    return toggleForm(target);
  });
};

suburbSearchListener = function() {
  return $("#suburb-search").on("focus", function(event) {
    var data, value;
    data = [];
    value = 1000;
    _.times(7000, function(n) {
      value++;
      return data.push(value.toString());
    });
    return $("#suburb-search").typeahead({
      source: data,
      items: 15
    });
  });
};

suburbSearchInputSubmitListener = function() {
  return $("#suburb-input-submit").on("click", function(event) {
    var control, suburb, target;
    event.preventDefault();
    target = $(event.target);
    suburb = $("#suburb-search").val();
    control = getControl("suburb");
    control.text(suburb);
    updateEstimate();
    return toggleForm(target);
  });
};

financeCalcUserInputListener = function() {
  return $(".finance-calculator-use-input").on("click", function(event) {
    var control, target, use;
    event.preventDefault();
    target = $(event.target);
    use = target.data("value");
    control = getControl("use");
    control.text(use);
    updateEstimate();
    return toggleForm(target);
  });
};

financeCalcInterestInputListener = function() {
  return $(".finance-calculator-interest-input").on("click", function(event) {
    var control, interest, target;
    event.preventDefault();
    target = $(event.target);
    interest = target.data("value");
    control = getControl("interest");
    control.text(interest);
    updateEstimate();
    return toggleForm(target);
  });
};

financeCalcYearsInputListener = function() {
  return $(".finance-calculator-years-input").on("click", function(event) {
    var control, target, years;
    event.preventDefault();
    target = $(event.target);
    years = target.data("value");
    control = getControl("years");
    control.text(years);
    updateEstimate();
    return toggleForm(target);
  });
};

$(document).ready(function() {
  financeCalcListener();
  financeCalcMobileInputListener();
  financeCalcCloseListener();
  suburbSearchListener();
  suburbSearchInputSubmitListener();
  financeCalcUserInputListener();
  financeCalcInterestInputListener();
  return financeCalcYearsInputListener();
});
